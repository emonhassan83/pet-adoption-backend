//* This is your Prisma schema file,

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  name            String
  email           String            @unique
  password        String
  role            UserRole
  profilePhoto    String?
  status          UserStatus        @default(ACTIVE)
  isDeleted       Boolean           @default(false)
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  adoptionRequest AdoptionRequest[]
  pet             Pet[]

  @@map("users")
}

model Pet {
  id                   String            @id @default(uuid())
  name                 String
  image                String
  species              String
  breed                String
  age                  Int
  size                 String
  location             String
  description          String
  temperament          String
  medicalHistory       String
  adoptionRequirements String
  healthStatus         String
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt

  //* Define relationships
  userId               String
  user                 User              @relation(fields: [userId], references: [id])
  adoptionRequest      AdoptionRequest[]

  @@map("pets")
}

model AdoptionRequest {
  id                     String        @id @default(uuid())
  userId                 String
  petId                  String
  status                 RequestStatus @default(PENDING)
  petOwnershipExperience String
  createdAt              DateTime      @default(now())
  updatedAt              DateTime      @updatedAt

  //* Define relationships
  user User @relation(fields: [userId], references: [id])
  pet  Pet  @relation(fields: [petId], references: [id])

  @@map("adoptionrequests")
}

enum UserRole {
  ADMIN
  USER
}

enum UserStatus {
  ACTIVE
  BLOCKED
  DELETED
}

enum RequestStatus {
  PENDING
  APPROVED
  REJECTED
}
